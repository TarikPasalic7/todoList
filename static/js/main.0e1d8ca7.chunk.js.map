{"version":3,"sources":["Components/TodoItem.js","Components/ToDoList.js","App.js","index.js"],"names":["TodoItem","list","removeList","map","l","index","className","onClick","id","text","ToDoList","useState","input","setInput","setList","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","onChange","e","target","value","type","name","placeholder","preventDefault","test","newitem","Math","floor","random","newList","removeArr","filter","App","params","particles","line_linked","shadow","enable","color","blur","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAmBeA,EAlBC,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,WAGnB,OAAOD,EAAKE,KAAI,SAACC,EAAEC,GAAH,OAEX,8BAEA,qBAAKC,UAAU,OAAkBC,QAAS,kBAAIL,EAAWE,EAAEI,KAA3D,SAEKJ,EAAEK,MAFoBL,EAAEI,KAFnBH,OC0EJK,EA7EC,WAEZ,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAuBF,mBAAS,IAAhC,mBAAOV,EAAP,KAAYa,EAAZ,KAEDC,qBAAU,WAGT,IAAMC,EAAKC,aAAaC,QAAQ,YAC7BF,GACCF,EAAQK,KAAKC,MAAMJ,MAMzB,IAECD,qBAAU,WAILE,aAAaI,QAAQ,WAAWF,KAAKG,UAAUrB,OAsCnD,OAEI,sBAAKK,UAAU,UAAf,UACG,oBAAIA,UAAU,cAAd,wBACH,iCACA,uBAAOA,UAAU,WAAWiB,SAff,SAAAC,GACnBX,EAASW,EAAEC,OAAOC,QAcyCC,KAAK,OAAOC,KAAK,WAAWpB,GAAG,WAAWqB,YAAY,cAAcH,MAAOd,IAChI,wBAAQN,UAAU,SAASC,QAxCpB,SAACiB,GAGb,GAFGA,EAAEM,iBAEDlB,IAAS,QAAQmB,KAAKnB,GAA1B,CASA,IAAMoB,EAAQ,CACbxB,GAAIyB,KAAKC,MAAoB,IAAdD,KAAKE,UACpB1B,KAAKG,GAGDwB,EAAO,sBAAMnC,GAAN,CAAW+B,IAExBlB,EAAQsB,GAGRvB,EAAS,MAkBH,oBAEA,cAAG,EAAH,CAAaZ,KAAMA,EAAMC,WAbZ,SAAAM,GACd,IAAM6B,EAAW,YAAIpC,GAAMqC,QAAO,SAAAlC,GAAC,OAAEA,EAAEI,KAAMA,KAE7CM,EAAQuB,U,wBChCAE,MAzBf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,IAAD,CAAYA,UAAU,YACdkC,OAAQ,CACRC,UAAW,CACVC,YAAa,CACZC,OAAQ,CACPC,QAAQ,EACRC,MAAO,QACPC,KAAM,QASlB,cAAC,EAAD,QCjBLC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0e1d8ca7.chunk.js","sourcesContent":["//rfce autogenerate component\r\nconst TodoItem =({list,removeList})=>{\r\n    \r\n   \r\n    return list.map((l,index)=>(\r\n     \r\n         <div key={index} >\r\n\r\n         <div className=\"item\" key={l.id} onClick={()=>removeList(l.id)} >\r\n\r\n             {l.text}\r\n         </div>\r\n\r\n         </div>\r\n\r\n    ))\r\n\r\n}\r\n\r\nexport default TodoItem;","import React, {useState,useEffect} from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst ToDoList =()=>{\r\n\r\n    const [input,setInput] = useState(\"\");\r\n    const [list,setList] = useState([]);\r\n    \r\n   useEffect(()=>{\r\n       \r\n    //localstorage\r\n    const data=localStorage.getItem(\"listItem\");\r\n    if(data){\r\n        setList(JSON.parse(data));\r\n    }\r\n    \r\n   // localStorage.setItem('listItem',JSON.stringify(list));\r\n  \r\n\r\n},[]) //onmount\r\n\r\n   useEffect(()=>{\r\n       \r\n        //localstorage\r\n        \r\n        localStorage.setItem('listItem',JSON.stringify(list));\r\n      \r\n\r\n    },) //update everytime\r\n    const add =(e) =>{\r\n      e.preventDefault();\r\n\r\n   if(!input || /^\\s*$/.test(input)){\r\n       return;\r\n   }\r\n \r\n //  const localdata=localStorage.getItem('listItem');\r\n  //const newList =[...list,newitem];\r\n // console.log(localdata);\r\n  // list=JSON.parse(localdata);\r\n   //setList(JSON.parse(localdata));\r\n   const newitem={\r\n    id: Math.floor(Math.random()*1000),\r\n    text:input\r\n}\r\n   //console.log(list);\r\n  const newList =[...list,newitem]\r\n\r\n  setList(newList);\r\n \r\n\r\n  setInput('');\r\n    }\r\nconst handleChange = e =>{\r\n  setInput(e.target.value);\r\n\r\n}\r\n\r\n   const removeList =id =>{\r\n       const removeArr= [...list].filter(l=>l.id !==id);\r\n\r\n       setList(removeArr);\r\n   }\r\n    return(\r\n\r\n        <div className=\"listfrm\">\r\n           <h2 className=\"font-family\">To-Do List</h2>\r\n        <form>\r\n        <input className=\"inputTxt\" onChange={handleChange}  type=\"text\" name=\"todolist\" id=\"todolist\" placeholder=\"add item...\" value={input}/>\r\n        <button className=\"btnAdd\" onClick={add}>Add</button>\r\n        </form>\r\n        <  TodoItem  list={list} removeList={removeList}/> \r\n\r\n\r\n                 </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ToDoList;","import ToDoList from \"./Components/ToDoList\";\nimport Particles from \"react-particles-js\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Particles  className=\"particles\"\n              params={{\n            \t\tparticles: {\n            \t\t\tline_linked: {\n            \t\t\t\tshadow: {\n            \t\t\t\t\tenable: true,\n            \t\t\t\t\tcolor: \"black\",\n            \t\t\t\t\tblur: 5\n            \t\t\t\t}\n            \t\t\t}\n            \t\t}\n            \t}}\n             \n            />\n                   \n                 \n     <ToDoList/> \n   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}